import subprocess
import random
import argparse
from decouple import config
from os.path import join


def scrambled(orig):
    dest = orig[:]
    random.shuffle(dest)
    return dest


parser = argparse.ArgumentParser(description="Run the gen.py script on a set of proposal ids")
parser.add_argument("proposal_type", type=str, help="This str specifies which p_type of proposals to run gen.py on.")
parser.add_argument("--randomize", action="store_true",
                    help="If this is set then randomize the ids. Otherwise, ids will be run in ascending value order")
args = parser.parse_args()

target_type = args.proposal_type.upper()

full_prop_ids = [100001, 100002, 100007, 100018, 100021, 100027, 100040, 100055, 100056, 100058, 100059, 100061, 100071,
                 100076, 100084, 100090, 100097, 100100, 100101, 100103, 100104, 100108, 100111, 100113, 100117, 100120,
                 100128, 100129, 100130, 100155, 100163, 100168, 100169, 100171, 100172, 100178, 100182, 100185, 100186,
                 100187, 100188, 100189, 100190, 100202, 100205, 100208, 100210, 100216, 100220, 100222, 100223, 100224,
                 100234, 100264, 100273, 100274, 100275, 100300, 100307, 100308, 100309, 100313, 100316, 100317, 100319,
                 100323, 100330, 100331, 100336, 100340, 100351, 100356, 100359, 100360, 100381, 100382, 100384, 100385,
                 100386, 100388, 100398, 100404, 100416, 100421, 100422, 100424, 100431, 100438, 100441, 100442, 100443,
                 100445, 100449, 100450, 100479, 100480, 100492, 100494, 100495, 100496, 100500, 100506, 100509, 100517,
                 100519, 100521, 100523, 100524, 100525, 100526, 100530, 100531, 100533, 100555, 100577, 100578, 100582,
                 100587, 100589, 100593, 100595, 100600, 100606, 100610, 100611, 100620, 100626, 100632, 100679, 100682,
                 100687, 100696, 100700, 100709, 100710, 100711, 100763, 100765, 100780, 100789, 100793, 100794, 100797,
                 100799, 100811, 100814, 100821, 100837, 100841, 100842, 100843, 100844, 100846, 100864, 100865, 100888,
                 100890, 100904, 100910, 100914, 100917, 100953, 100958, 100962, 100969, 100971, 100973, 101000, 101007,
                 101028, 101035, 101036, 101070]

apl_prop_ids = [100005, 100006, 100009, 100011, 100041, 100042, 100045, 100048, 100073, 100086,
                100087, 100088, 100091, 100105, 100107, 100110, 100135, 100136, 100144, 100166,
                100212, 100218, 100228, 100229, 100237, 100238, 100286, 100289, 100290, 100306,
                100320, 100357, 100363, 100397, 100406, 100446, 100448, 100487, 100488, 100527,
                100528, 100564, 100590, 100591, 100598, 100599, 100621, 100622, 100684, 100690,
                100695, 100717, 100776, 100777, 100792, 100808, 100849, 100862, 100915, 100919,
                100921, 100970, 101006, 101054, 101055, 101076]

cpp_prop_ids = [100028, 100029, 100063, 100075, 100140, 100141, 100149, 100164, 100165, 100179, 100276, 100284, 100478,
                100889, 101046]

pre_prop_ids = [100008, 100014, 100016, 100020, 100024, 100035, 100036, 100037, 100046, 100047,
                100049, 100050, 100051, 100053, 100054, 100057, 100062, 100065, 100072, 100074,
                100089, 100092, 100093, 100095, 100102, 100114, 100115, 100123, 100125, 100126,
                100127, 100131, 100132, 100133, 100134, 100137, 100145, 100146, 100154, 100156,
                100157, 100162, 100167, 100170, 100174, 100175, 100177, 100181, 100201, 100209,
                100215, 100217, 100219, 100225, 100226, 100231, 100232, 100235, 100268, 100269,
                100270, 100287, 100288, 100291, 100305, 100311, 100322, 100324, 100325, 100326,
                100352, 100353, 100355, 100358, 100369, 100373, 100376, 100380, 100389, 100391,
                100392, 100394, 100399, 100403, 100405, 100408, 100434, 100437, 100439, 100444,
                100447, 100462, 100477, 100505, 100508, 100522, 100563, 100572, 100574, 100584,
                100592, 100594, 100596, 100597, 100615, 100618, 100655, 100665, 100677, 100692,
                100698, 100702, 100707, 100712, 100746, 100747, 100775, 100781, 100787, 100796,
                100800, 100802, 100806, 100809, 100810, 100835, 100838, 100839, 100869, 100891,
                100900, 100909, 100912, 100920, 100922, 100923, 100944, 100964, 100968, 100978,
                101001, 101026, 101029, 101039, 101041, 101048, 101051, 101058, 101062, 101065,
                101069, 101074, 101078]

add_prop_ids = [100022, 100023, 100030, 100031, 100033, 100043, 100060, 100068, 100085, 100106,
                100109, 100112, 100118, 100119, 100121, 100122, 100138, 100150, 100151, 100152,
                100153, 100158, 100159, 100160, 100183, 100191, 100206, 100207, 100211, 100221,
                100233, 100250, 100265, 100266, 100277, 100281, 100297, 100298, 100299, 100302,
                100312, 100328, 100332, 100333, 100338, 100345, 100346, 100354, 100361, 100368,
                100372, 100379, 100390, 100396, 100430, 100433, 100436, 100440, 100456, 100463,
                100481, 100485, 100486, 100491, 100497, 100535, 100538, 100561, 100568, 100570,
                100571, 100583, 100585, 100623, 100624, 100627, 100631, 100634, 100647, 100689,
                100701, 100706, 100718, 100721, 100737, 100743, 100749, 100760, 100779, 100782,
                100783, 100785, 100803, 100859, 100879, 100911, 100925, 100927, 100933, 100934,
                100935, 100938, 100940, 100941, 100942, 100943, 100960, 100967, 100989, 100994,
                101002, 101003, 101004, 101005, 101008, 101009, 101010, 101012, 101013, 101014,
                101015, 101016, 101019, 101025, 101030, 101031, 101038, 101040, 101052, 101053,
                101056, 101057, 101060, 101063, 101066, 101067, 101068, 101073, 101075]

srr_prop_ids = [100460, 100484, 100543, 100562, 100573, 100575, 100586, 100644, 100645, 100646,
                100652, 100654, 100656, 100661, 100669, 100751, 100753, 100757, 100764, 100766,
                100767, 100768, 100872, 100876, 100885, 100886, 100975, 100981, 100982, 100983,
                100985, 100986, 100987, 100990, 100991, 100992, 100993, 100995, 100996, 100997,
                100998, 100999, 101059, 101061, 101064]

pre_leap_prop_ids = [101080, 101082, 101083, 101086, 101088, 101089, 101090, 101091]

full_leap_prop_ids = []

type_selector = {"FULL": full_prop_ids,
                 "APL": apl_prop_ids,
                 "CPP": cpp_prop_ids,
                 "PRE": pre_prop_ids,
                 "ADD": add_prop_ids,
                 "SRR": srr_prop_ids,
                 "PRE-LEAP": pre_leap_prop_ids,
                 "FULL-LEAP": full_leap_prop_ids}

successful_proposals = []
failed_proposals = []

# Get the correct list of IDs to process from the command line and randomize this list as appropriate.
active_ids = type_selector[target_type]
if args.randomize:
    active_ids = scrambled(active_ids)

for number in active_ids:
    print("STARTING PROPOSAL " + str(number))
    command = [config("PRIMARY_PYTHON_INSTALLATION_PATH"),
               join(config("PDF_GEN_DIR"), "gen.py"), str(number)]
    result = subprocess.run(command, stdout=subprocess.PIPE, text=True, check=True)
    print(result.stdout)
    if result.returncode == 0:
        print("\n################################")
        print("Command executed successfully.")
        print("################################\n\n")
        successful_proposals.append(number)
    else:
        print("\n################################")
        print("Error executing the command.")
        print("################################\n\n")
        failed_proposals.append(number)

print("Successful Proposal Count: " + str(len(successful_proposals)))
print("Failed Proposal Count: " + str(len(failed_proposals)))
print("##########################")
print("Successful Proposals: " + str(successful_proposals))
print("Failed Proposals: " + str(failed_proposals))
print(f"DONE")
